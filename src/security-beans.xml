<?xml version="1.0" encoding="UTF-8"?>
<!--
Dynamo Web Services is a web service project for administering LucidDB
Copyright (C) 2010 Dynamo Business Intelligence Corporation

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option)
any later version approved by Dynamo Business Intelligence Corporation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
-->
<beans 
     xmlns="http://www.springframework.org/schema/beans"
     xmlns:security="http://www.springframework.org/schema/security"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://www.springframework.org/schema/beans      
               http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
               http://www.springframework.org/schema/security
               http://www.springframework.org/schema/security/spring-security-2.0.xsd">


<!--
 <security:http>
    <security:intercept-url pattern="/**" access="isAuthenticated()" />
    <security:http-basic />
  </security:http>

-->

    <security:authentication-provider user-service-ref="userDetailsService">
	<security:password-encoder ref="passwordEncoder"/>
    </security:authentication-provider>


<!-- 
	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.providers.dao.DaoAuthenticationProvider">
<security:custom-authentication-provider />
		<property name="userDetailsService">
			<ref bean="userDetailsService" />
		</property>
		<property name="passwordEncoder">
			<ref bean="passwordEncoder" />
		</property>
	</bean>
-->

  <bean id="userDetailsService" class="org.springframework.security.userdetails.jdbc.JdbcDaoImpl" destroy-method="cleanup">
		<property name="authoritiesByUsernameQuery">
			<value>
				<![CDATA[select username, authority from 
(select  gte."name" username, me."name" authority from sys_fem."Security"."Grant" g inner join sys_fem."Security"."AuthId" gto on      g."Grantor" = gto."mofId" inner join sys_fem."Security"."AuthId" gte on      g."Grantee" = gte."mofId" inner join sys_cwm."Core"."ModelElement" me on      g."Element" = me."mofId" where g."action" = 'INHERIT_ROLE'
UNION 
select  gte."name" username, 'Authenticated' as authority from sys_fem."Security"."AuthId" gte 
) auth  
where username = ?]]>
			</value>
		</property>
		<property name="usersByUsernameQuery">
			<value>
				<![CDATA[SELECT username, case when password is null then '' else password end as password, enabled FROM (select "name" as username, "encryptedPassword" as password, true as enabled from sys_fem."Security"."User") spring_users WHERE username = ? ORDER BY username]]>
			</value>
		</property>
		<property name="dataSource">
			<ref bean="myDataSource"/>
		</property>
	</bean>
	
    
	<bean id="passwordEncoder"
		class="com.dynamobi.ws.util.LucidDBEncoder">
		<property name="encodeHashAsBase64" value="true" />
		<constructor-arg value="256" />
	</bean>

  <bean id="myDataSource" class="com.dynamobi.ws.util.UserToDataSource" />

<bean id="sessionConnection" class="com.dynamobi.ws.util.DBSessionHolder" scope="session" destroy-method="cleanup"></bean>

<!--<bean id="schedule" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
  <property name="waitForJobsToCompleteOnShutdown" value="true" />
  <property name="dataSource" ref="myDataSource" />
</bean>-->

</beans>
